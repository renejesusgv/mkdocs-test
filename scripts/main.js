const buildFileName = require("./helpers").buildFileName

const body = "---\r\ntitle: Wizeline docs as code\r\nsummary: Wizeline docs as code description and collaboration instructions.\r\nauthors:\r\n    - Mario Morales\r\n    - Brenda Leyva\r\nlabels: wizeline, tw\r\nsections: \r\n  - For Contributors/Explain\r\n---\r\n\r\n# Wizeline Docs as Code\r\n\r\nWizeline Docs as Code is an internal documentation strategy to establish an\r\nSSOT. The goal is for Wizeliners to create, maintain, and share internal\r\ndocumentation across the different disciplines using the proposed site built\r\nwith [MkDocs](https://www.mkdocs.org) and [Material for\r\nMkDocs](https://squidfunk.github.io/mkdocs-material/).\r\n\r\n## Setting up Wizeline Docs as Code Locally\r\n\r\nTo set up Wizeline Docs as Code in your local environment, follow the steps in the\r\n[`wizedocs/mkdocs_README.md`](https://github.com/wizeline/wizedocs/tree/main/mkdocs_README.md) directory.\r\n\r\n## Collaborating\r\n\r\nYou can add new pages to the Wizeline Docs as Code repository to update the site\r\nusing the GitHub user interface (UI) or via the Command Line Interface (CLI).\r\n\r\n### Adding New Pages Using the GitHub UI\r\n\r\nTo add a new page using the [GitHub](https://github.com/) UI, follow the next steps:\r\n\r\n1. Navigate to the\r\n   [`wizedocs/docs/`](https://github.com/wizeline/wizedocs/tree/main/docs)\r\n   directory in the Wizeline Docs as Code repository.\r\n\r\n2. Click the **Add file** button on the top right corner and choose to **Create\r\n   a new file** or **Upload files** if you have a document ready.\r\n\r\n   >**Note**: Use the navigation levels to name your `.md` file. Separate the\r\n   >navigation levels that lead to your document with a period and use hyphens\r\n   >instead of spaces. For example, if you have a document named \"Style Guide for\r\n   >Contributors\" in a writing section under tutorials, name your file as follows:\r\n   >\r\n   >`tutorials.writing.style-guide-for-contributors.md`\r\n\r\n3. Create a Markdown file with the documentation you want to add to the site.\r\n\r\n   >**Important**: Your document needs to include the following details before\r\n   >its contents:  \r\n   > `---`  \r\n   > title: Document title.  \r\n   > summary: Short description of the document.  \r\n   > sections: Section of the site where the content belongs.  \r\n   > `---`  \r\n   >\r\n   > You can consult this\r\n   > [raw document](https://raw.githubusercontent.com/wizeline/wizedocs/main/docs/contributors.tutorials.markdown-guide-for-contributors.md?token=AF4TZQIKM5Y2SZY2LO5HCC3BAMGFA)\r\n   > to see an example.\r\n\r\n4. Fill the fields in the **Commit new file** section.\r\n\r\n5. Select the **Create a new branch for this commit and start a pull request** option.\r\n\r\n6. Click the **Commit new file** button.\r\n\r\n### Adding New Pages via CLI\r\n\r\nTo add a new page using the command line, follow the next steps:\r\n\r\n1. Clone the repository:\r\n\r\n   ```bash\r\n   git clone git@github.com:wizeline/wizedocs.git\r\n   ```\r\n\r\n2. Navigate to your local `wizedocs/docs/` directory and create your own branch\r\n   as follows:  \r\n\r\n   ```bash\r\n   git checkout -b your-branch\r\n   ```\r\n\r\n   >**Note**: Give your branch a name that relates to the document you are creating.\r\n\r\n3. Create a new `.md` file into the `wizedocs/docs/` folder. Remember to follow\r\n   the naming convention described in step two of [Adding New Pages Using the GitHub\r\n   UI](#adding-new-pages-using-the-github-ui) and include\r\n   the details described in step three at the top of your document.\r\n\r\n4. Add to Git the files you create and modify using the `add` command:\r\n\r\n    ```bash\r\n   git add 'your-document.md'\r\n    ```\r\n\r\n5. Commit and push your changes:\r\n\r\n   ```bash\r\n   git commit -m 'description of commit'\r\n   git push -u origin your-branch\r\n   ```\r\n\r\n6. Go to the GitHub\r\n   [repository](https://github.com/wizeline/wizedocs) and create a pull request;\r\n   this action enables you to add a reviewer for the document. Once you complete\r\n   the review and everything looks good, you can continue the process and merge\r\n   the changes. At this point your document will appear on the site.\r\n\r\n## References and Further Reading\r\n\r\nConsult the following resources for more information on MkDocs and using Git:\r\n\r\n- Detailed information about writing your documents with MkDocs is available on the [MkDocs official website](https://www.mkdocs.org/user-guide/writing-your-docs/).\r\n- GitHub branching, pull requests, and merging resources:\r\n  - [Creating a new branch in GitHub made\r\n    effortless](https://zepel.io/blog/how-to-create-a-new-branch-in-github/) by\r\n    Vikash Koushik.\r\n  - [Git branches FAQ](https://www.git-tower.com/learn/git/faq/create-branch/)\r\n    from the Tower website.\r\n  - [Creating a pull\r\n    request](https://docs.github.com/en/github/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request)\r\n    from GitHub Docs.\r\n  - [Pull request tutorial](https://yangsu.github.io/pull-request-tutorial/) by\r\n    Yang Su.\r\n  - [Merging a pull\r\n    request](https://docs.github.com/en/github/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/merging-a-pull-request)\r\n    from GitHub Docs."

console.log(buildFileName(body));


