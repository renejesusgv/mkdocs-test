{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files. New Entry This is how a new entry looks like. And this line was added using StackEdit.","title":"Welcome to MkDocs"},{"location":"index.html#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"index.html#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"index.html#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"index.html#new-entry","text":"This is how a new entry looks like. And this line was added using StackEdit.","title":"New Entry"},{"location":"contributors.explain.docs-as-code.html","text":"Wizeline Docs as Code Wizeline Docs as Code is an internal documentation strategy to establish an SSOT. The goal is for Wizeliners to create, maintain, and share internal documentation across the different disciplines using the proposed site built with MkDocs and Material for MkDocs . Setting up Wizeline Docs as Code Locally To set up Wizeline Docs as Code in your local environment, follow the steps in the wizedocs/mkdocs_README.md directory. Collaborating You can add new pages to the Wizeline Docs as Code repository to update the site using the GitHub user interface (UI) or via the Command Line Interface (CLI). Adding New Pages Using the GitHub UI To add a new page using the GitHub UI, follow the next steps: Navigate to the wizedocs/docs/ directory in the Wizeline Docs as Code repository. Click the Add file button on the top right corner and choose to Create a new file or Upload files if you have a document ready. Note : Use the navigation levels to name your .md file. Separate the navigation levels that lead to your document with a period and use hyphens instead of spaces. For example, if you have a document named \"Style Guide for Contributors\" in a writing section under tutorials, name your file as follows: tutorials.writing.style-guide-for-contributors.md Create a Markdown file with the documentation you want to add to the site. Important : Your document needs to include the following details before its contents: --- title: Document title. summary: Short description of the document. sections: Section of the site where the content belongs. --- You can consult this raw document to see an example. Fill the fields in the Commit new file section. Select the Create a new branch for this commit and start a pull request option. Click the Commit new file button. Adding New Pages via CLI To add a new page using the command line, follow the next steps: Clone the repository: bash git clone git@github.com:wizeline/wizedocs.git Navigate to your local wizedocs/docs/ directory and create your own branch as follows: bash git checkout -b your-branch Note : Give your branch a name that relates to the document you are creating. Create a new .md file into the wizedocs/docs/ folder. Remember to follow the naming convention described in step two of Adding New Pages Using the GitHub UI and include the details described in step three at the top of your document. Add to Git the files you create and modify using the add command: bash git add 'your-document.md' Commit and push your changes: bash git commit -m 'description of commit' git push -u origin your-branch Go to the GitHub repository and create a pull request; this action enables you to add a reviewer for the document. Once you complete the review and everything looks good, you can continue the process and merge the changes. At this point your document will appear on the site. References and Further Reading Consult the following resources for more information on MkDocs and using Git: Detailed information about writing your documents with MkDocs is available on the MkDocs official website . GitHub branching, pull requests, and merging resources: Creating a new branch in GitHub made effortless by Vikash Koushik. Git branches FAQ from the Tower website. Creating a pull request from GitHub Docs. Pull request tutorial by Yang Su. Merging a pull request from GitHub Docs.","title":"Wizeline docs as code"},{"location":"contributors.explain.docs-as-code.html#wizeline-docs-as-code","text":"Wizeline Docs as Code is an internal documentation strategy to establish an SSOT. The goal is for Wizeliners to create, maintain, and share internal documentation across the different disciplines using the proposed site built with MkDocs and Material for MkDocs .","title":"Wizeline Docs as Code"},{"location":"contributors.explain.docs-as-code.html#setting-up-wizeline-docs-as-code-locally","text":"To set up Wizeline Docs as Code in your local environment, follow the steps in the wizedocs/mkdocs_README.md directory.","title":"Setting up Wizeline Docs as Code Locally"},{"location":"contributors.explain.docs-as-code.html#collaborating","text":"You can add new pages to the Wizeline Docs as Code repository to update the site using the GitHub user interface (UI) or via the Command Line Interface (CLI).","title":"Collaborating"},{"location":"contributors.explain.docs-as-code.html#adding-new-pages-using-the-github-ui","text":"To add a new page using the GitHub UI, follow the next steps: Navigate to the wizedocs/docs/ directory in the Wizeline Docs as Code repository. Click the Add file button on the top right corner and choose to Create a new file or Upload files if you have a document ready. Note : Use the navigation levels to name your .md file. Separate the navigation levels that lead to your document with a period and use hyphens instead of spaces. For example, if you have a document named \"Style Guide for Contributors\" in a writing section under tutorials, name your file as follows: tutorials.writing.style-guide-for-contributors.md Create a Markdown file with the documentation you want to add to the site. Important : Your document needs to include the following details before its contents: --- title: Document title. summary: Short description of the document. sections: Section of the site where the content belongs. --- You can consult this raw document to see an example. Fill the fields in the Commit new file section. Select the Create a new branch for this commit and start a pull request option. Click the Commit new file button.","title":"Adding New Pages Using the GitHub UI"},{"location":"contributors.explain.docs-as-code.html#adding-new-pages-via-cli","text":"To add a new page using the command line, follow the next steps: Clone the repository: bash git clone git@github.com:wizeline/wizedocs.git Navigate to your local wizedocs/docs/ directory and create your own branch as follows: bash git checkout -b your-branch Note : Give your branch a name that relates to the document you are creating. Create a new .md file into the wizedocs/docs/ folder. Remember to follow the naming convention described in step two of Adding New Pages Using the GitHub UI and include the details described in step three at the top of your document. Add to Git the files you create and modify using the add command: bash git add 'your-document.md' Commit and push your changes: bash git commit -m 'description of commit' git push -u origin your-branch Go to the GitHub repository and create a pull request; this action enables you to add a reviewer for the document. Once you complete the review and everything looks good, you can continue the process and merge the changes. At this point your document will appear on the site.","title":"Adding New Pages via CLI"},{"location":"contributors.explain.docs-as-code.html#references-and-further-reading","text":"Consult the following resources for more information on MkDocs and using Git: Detailed information about writing your documents with MkDocs is available on the MkDocs official website . GitHub branching, pull requests, and merging resources: Creating a new branch in GitHub made effortless by Vikash Koushik. Git branches FAQ from the Tower website. Creating a pull request from GitHub Docs. Pull request tutorial by Yang Su. Merging a pull request from GitHub Docs.","title":"References and Further Reading"}]}